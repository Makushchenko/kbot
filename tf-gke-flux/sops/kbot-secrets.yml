name: Generate & Commit SOPS-encrypted kbot secrets

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: kbot-secrets
  cancel-in-progress: false

env:
  # secrets (set in GitHub → Settings → Secrets and variables → Actions → Secrets)
  GCP_PROJECT_ID:       ${{ secrets.GCP_PROJECT_ID }}
  GCP_KMS_KEYRING_NAME: ${{ secrets.GCP_KMS_KEYRING_NAME }}
  # non secrets
  GHCR_SERVER: ghcr.io                                                                 # optional
  GHCR_USER:   ${{ github.actor }}
  GHCR_EMAIL:  ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com     # optional

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (service account key)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - id: secrets
        uses: google-github-actions/get-secretmanager-secrets@v3
        with:
          secrets: |
            TELE_TOKEN:projects/${{ secrets.GCP_PROJECT_ID }}/secrets/TELE_TOKEN:latest
            GH_PAT:projects/${{ secrets.GCP_PROJECT_ID }}/secrets/GH_PAT:latest
          export_to_environment: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure gcloud project
        run: gcloud config set project "$GCP_PROJECT_ID"

      - name: Install kubectl (for YAML generation only)
        uses: azure/setup-kubectl@v4
        with:
          version: v1.33.0

      - name: Install SOPS (verified)
        env:
          SOPS_VERSION: "3.10.2"
        run: |
          set -euo pipefail
          curl -LO "https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64"
          sudo mv sops-v${SOPS_VERSION}.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops

      - name: Generate plaintext secrets.yaml (no cluster access needed)
        run: |
          set -euo pipefail
          mkdir -p clusters/kbot
          WORK=./.tmp
          mkdir -p "$WORK"

          SERVER="${GHCR_SERVER:-ghcr.io}"
          EMAIL="${GHCR_EMAIL:-ci@example.com}"

          # kbot token secret (Opaque)
          printf %s "$TELE_TOKEN" \
          | kubectl -n kbot create secret generic kbot \
              --type=Opaque \
              --from-file=token=/dev/stdin \
              --dry-run=client -o yaml > "$WORK/secrets.yaml"
          echo '---' >> "$WORK/secrets.yaml"
          # docker config json for ghcr (kubernetes.io/dockerconfigjson)
          AUTH_B64="$(printf "%s:%s" "$GHCR_USER" "$GH_PAT" | base64 -w0)"
          printf '{"auths":{"%s":{"username":"%s","password":"%s","email":"%s","auth":"%s"}}}\n' \
            "$SERVER" "$GHCR_USER" "$GH_PAT" "$EMAIL" "$AUTH_B64" \
          | kubectl -n kbot create secret generic ghcr-creds \
              --type=kubernetes.io/dockerconfigjson \
              --from-file=.dockerconfigjson=/dev/stdin \
              --dry-run=client -o yaml >> "$WORK/secrets.yaml"

      - name: Encrypt with SOPS using GCP KMS key in keyring
        run: |
          set -euo pipefail
          sops -e --gcp-kms "$GCP_KMS_KEYRING_NAME" \
            --encrypted-regex '^(token|\.dockerconfigjson)$' \
            ./.tmp/secrets.yaml > clusters/kbot/secrets-enc.yaml

      - name: Remove plaintext
        run: rm -rf ./.tmp

      - name: Commit & push
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add clusters/kbot/secrets-enc.yaml
          if ! git diff --cached --quiet; then
            git commit -m "update SOPS-encrypted secrets"
            git push origin ${{ github.ref_name }}
          else
            echo "No changes to commit."
          fi